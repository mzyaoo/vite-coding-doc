import{_ as l,C as e,c as p,o,j as a,G as i,a6 as r,a as h}from"./chunks/framework.DNRdtUFH.js";const C=JSON.parse('{"title":"DockerDesktopModels","description":"","frontmatter":{},"headers":[],"relativePath":"model/DockerDesktopModels.md","filePath":"model/DockerDesktopModels.md"}'),d={name:"model/DockerDesktopModels.md"};function k(c,s,u,F,b,m){const n=e("ArticleMetadata"),t=e("LinkCard");return o(),p("div",null,[s[0]||(s[0]=a("h1",{id:"dockerdesktopmodels",tabindex:"-1"},[h("DockerDesktopModels "),a("a",{class:"header-anchor",href:"#dockerdesktopmodels","aria-label":'Permalink to "DockerDesktopModels"'},"​")],-1)),i(n),s[1]||(s[1]=a("div",{class:"tip custom-block github-alert"},[a("p",{class:"custom-block-title"},"TIP"),a("p",null,"版本要求：Docker Engine or Docker Desktop (Windows) 4.41+ or Docker Desktop (MacOS) 4.40+")],-1)),i(t,{url:"https://docs.docker.com/ai/model-runner/#how-do-i-interact-through-the-openai-api",title:"官方文档",description:"https://docs.docker.com/ai/model-runner/#how-do-i-interact-through-the-openai-api"}),s[2]||(s[2]=r(`<h2 id="此文档以qwen3为例" tabindex="-1">此文档以<code>Qwen3</code>为例 <a class="header-anchor" href="#此文档以qwen3为例" aria-label="Permalink to &quot;此文档以\`Qwen3\`为例&quot;">​</a></h2><h3 id="下载模型" tabindex="-1">下载模型 <a class="header-anchor" href="#下载模型" aria-label="Permalink to &quot;下载模型&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ai/qwen3:latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>下载完成后 <code>DockerDesktop</code> 即可看到对应模型，点击对应的模型即可本地对话。</strong></p><h3 id="开启模型运行器并指定端口" tabindex="-1">开启模型运行器并指定端口 <a class="header-anchor" href="#开启模型运行器并指定端口" aria-label="Permalink to &quot;开启模型运行器并指定端口&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> desktop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model-runner</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tcp=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="关闭模型运行器" tabindex="-1">关闭模型运行器 <a class="header-anchor" href="#关闭模型运行器" aria-label="Permalink to &quot;关闭模型运行器&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> desktop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model-runner</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>默认端口：12434</strong></p><h3 id="tcp-请求示例" tabindex="-1">TCP 请求示例 <a class="header-anchor" href="#tcp-请求示例" aria-label="Permalink to &quot;TCP 请求示例&quot;">​</a></h3><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>调用其他模型修改参数 <code>model</code> 即可，DockerDesktop不提供配置局域网访问，即 <code>0.0.0.0</code>， 可通过端口代理的方式来实现 <a href="./../other/mac-application.html#端口转发-socat">点我跳转：查看 socat 使用</a></p></div><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:12434/engines/llama.cpp/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;model&quot;: &quot;ai/qwen3&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;stream&quot;: true,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;chat_template_kwargs&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;enable_thinking&quot;: false</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;一句话概括自己，你是谁&quot;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,12))])}const y=l(d,[["render",k]]);export{C as __pageData,y as default};
